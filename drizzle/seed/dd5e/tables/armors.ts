import { armors, armorTypeEnum, translations } from "@/db/schema";
import z from "zod";
import { createMainFunction, seed } from "../../utils";
import { SYSTEM_ID_DD5E } from "../constants";

const armorSchema = z.object({
  slug: z.string().min(1).max(100),
  defaultName: z.string().min(1).max(200),
  systemId: z.number(),
  armorType: z.enum(armorTypeEnum.enumValues),
  baseArmorClass: z.number().min(1).max(30).optional(),
  armorTypeBonus: z.number().min(0).max(10).optional(),
  hasDexterityBonus: z.boolean(),
  maxDexterityBonus: z.number().min(0).max(10).optional(),
  hasStealthDisadvantage: z.boolean(),
  weight: z.number().min(0).max(1000),
  value: z.number().min(0).max(200_000),
});

type ArmorInsertSchema = typeof armors.$inferInsert;

const armorsSeedData: ArmorInsertSchema[] = [
  {
    slug: "padded-armor",
    defaultName: "Padded Armor",
    armorType: "light",
    baseArmorClass: 11,
    hasDexterityBonus: true,
    hasStealthDisadvantage: true,
    weight: 8,
    value: 500,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "leather-armor",
    defaultName: "Leather Armor",
    armorType: "light",
    baseArmorClass: 11,
    hasDexterityBonus: true,
    hasStealthDisadvantage: false,
    weight: 10,
    value: 1000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "studded-leather-armor",
    defaultName: "Studded Leather Armor",
    armorType: "light",
    baseArmorClass: 12,
    hasDexterityBonus: true,
    hasStealthDisadvantage: false,
    weight: 13,
    value: 4500,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "hide-armor",
    defaultName: "Hide Armor",
    armorType: "medium",
    baseArmorClass: 12,
    hasDexterityBonus: true,
    maxDexterityBonus: 2,
    hasStealthDisadvantage: false,
    weight: 12,
    value: 1000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "chain-shirt",
    defaultName: "Chain Shirt",
    armorType: "medium",
    baseArmorClass: 13,
    hasDexterityBonus: true,
    maxDexterityBonus: 2,
    hasStealthDisadvantage: false,
    weight: 20,
    value: 5000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "scale-mail",
    defaultName: "Scale Mail",
    armorType: "medium",
    baseArmorClass: 14,
    hasDexterityBonus: true,
    maxDexterityBonus: 2,
    hasStealthDisadvantage: true,
    weight: 45,
    value: 5000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "breastplate",
    defaultName: "Breastplate",
    armorType: "medium",
    baseArmorClass: 14,
    hasDexterityBonus: true,
    maxDexterityBonus: 2,
    hasStealthDisadvantage: false,
    weight: 20,
    value: 40000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "half-plate",
    defaultName: "Half Plate Armor",
    armorType: "medium",
    baseArmorClass: 15,
    hasDexterityBonus: true,
    maxDexterityBonus: 2,
    hasStealthDisadvantage: true,
    weight: 40,
    value: 75000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "ring-mail",
    defaultName: "Ring Mail",
    armorType: "heavy",
    baseArmorClass: 14,
    hasDexterityBonus: false,
    hasStealthDisadvantage: true,
    weight: 40,
    value: 3000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "chain-mail",
    defaultName: "Chain Mail",
    armorType: "heavy",
    baseArmorClass: 16,
    hasDexterityBonus: false,
    hasStealthDisadvantage: true,
    weight: 55,
    value: 7500,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "splint-armor",
    defaultName: "Splint Armor",
    armorType: "heavy",
    baseArmorClass: 17,
    hasDexterityBonus: false,
    hasStealthDisadvantage: true,
    weight: 60,
    value: 20000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "plate-armor",
    defaultName: "Plate Armor",
    armorType: "heavy",
    baseArmorClass: 18,
    hasDexterityBonus: false,
    hasStealthDisadvantage: true,
    weight: 65,
    value: 150000,
    systemId: SYSTEM_ID_DD5E,
  },
  {
    slug: "shield",
    defaultName: "Shield",
    armorType: "shield",
    armorTypeBonus: 2,
    hasDexterityBonus: false,
    hasStealthDisadvantage: false,
    weight: 6,
    value: 1000,
    systemId: SYSTEM_ID_DD5E,
  },
];

const armorTranslations = {
  "padded-armor": { en: "Padded Armor", fr: "Matelassée" },
  "leather-armor": { en: "Leather Armor", fr: "Cuir" },
  "studded-leather-armor": { en: "Studded Leather Armor", fr: "Cuir clouté" },
  "hide-armor": { en: "Hide Armor", fr: "Peaux" },
  "chain-shirt": { en: "Chain Shirt", fr: "Chemise de mailles" },
  "scale-mail": { en: "Scale Mail", fr: "Écailles" },
  breastplate: { en: "Breastplate", fr: "Cuirasse" },
  "half-plate": { en: "Half Plate Armor", fr: "Demi-plate" },
  "ring-mail": { en: "Ring Mail", fr: "Broigne" },
  "chain-mail": { en: "Chain Mail", fr: "Cotte de mailles" },
  "splint-armor": { en: "Splint Armor", fr: "Clibanion" },
  "plate-armor": { en: "Plate Armor", fr: "Harnois" },
  shield: { en: "Shield", fr: "Bouclier" },
};

async function seedArmors(db: any) {
  return await seed(db, {
    tableName: "armors",
    table: armors,
    data: armorsSeedData,
    schema: armorSchema,
    translations: {
      entity: "armors",
      table: translations,
      translations: armorTranslations,
      field: "name",
    },
  });
}

const main = createMainFunction(seedArmors);

main();
